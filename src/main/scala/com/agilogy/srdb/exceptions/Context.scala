package com.agilogy.srdb.exceptions

trait Context {
  def causedWhen: String
}

object Context {
  case class PrepareStatement(autogeneratedKeys: Boolean) extends Context {
    override def causedWhen: String = {
      "preparing the statement" + (if (autogeneratedKeys) " with auto generated keys" else "")
    }
  }
  case object SetArguments extends Context {
    override def causedWhen: String = "setting the arguments"
  }
  case class SetFetchSize(fs: Int) extends Context {
    override def causedWhen: String = s"setting the fetch size to $fs"
  }
  case object ExecuteQuery extends Context {
    override def causedWhen: String = "executing the query"
  }
  case object ReadResultSet extends Context {
    override def causedWhen: String = "reading the ResultSet"
  }
  case object ExecuteUpdate extends Context {
    override def causedWhen: String = "executing the update"
  }
  case object GetGeneratedKeys extends Context {
    override def causedWhen: String = "getting the ResultSet of the generated key"
  }
  case object ReadGeneratedKeys extends Context {
    override def causedWhen: String = "reading the ResultSet of the generated key"
  }

}

